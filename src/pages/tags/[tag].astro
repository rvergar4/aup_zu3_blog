---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import { basePath } from "../../config";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const publishedPosts = allPosts.filter(post => !post.data.draft);
  const uniqueTags = [...new Set(publishedPosts.map((post) => post.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = publishedPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
let { posts } = Astro.props;

//difficulty order
const difficultyOrder = ["beginner", "simple projects", "intermediate", "advanced"];

//get difficulty
function getDifficultyIndex(post) {
  const tags = post.data.tags?.map(t => t.toLowerCase()) || [];
  const index = difficultyOrder.findIndex(diff => tags.includes(diff));
  return index === -1 ? difficultyOrder.length : index;
}

//sort by difficulty and date
posts = posts.sort((a, b) => {
  const diffA = getDifficultyIndex(a);
  const diffB = getDifficultyIndex(b);

  if (diffA !== diffB) return diffA - diffB;
  return a.data.pubDate.valueOf() - b.data.pubDate.valueOf();
});
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    { posts.map((post) => <BlogPost 
                          url={`${basePath}posts/${post.id}/`} 
                          title={post.data.title} 
                          />) }
  </ul>
</BaseLayout>